Warum brauchen wir NGINX im Frontend?

Wenn wir auf unser Frontend zugriefen, wird der requewst von unserem browser gefeuert

Wir wollen aber diesen Reuqest von unsererm Cluster ausgehend, d.h. vom POD des Frontends machen.
Dafür haben wir die reverse Proxy. Requests die nach /api gehen werden an unseren NGINX webserver weitergeleitet.
Da sich dieser im Pod fürs frontend, und somit im cluster, befindet, werden die requests so gehandha, als würden diese
intern vom cluster abgefeuert werden.

Bau diese Images sound pushe sie in dein docker repo:

docker build -t alkyala/kubernetes-test-backend:latest ../Small-MongoDB-Redis-Project

docker push alkyala/kubernetes-test-backend:latest

# mit -f adressieren wir hier eine file.

docker build -f ../Kubernetes-Project-Frontend/dockerfile-kubernetes -t alkyala/kubernetes-test-frontend:latest ../Kubernetes-Project-Frontend

docker push alkyala/kubernetes-test-frontend:latest

Die Pfade sind genau von diesem Pfad aus gedacht.
Hier werden die auf mein dockerhub reingemacht. Kannst ja wenn du bock hast die version tags aendern.

Erstelle ein Projekt in GKE
Dann erstelle einen Cluster

Dann setze die Secrets


Secrets setzen:

You'll need to create a Kubernetes Secret for your MongoDB credentials.
You can do this with the following command:
kubectl create secret generic mongodb-secret --from-literal=mongo-root-username=<DEIN_USERNAME> --from-literal=mongo-root-password=<DEIN_PASSWORT>

denk dran auch die credentials zu ersetzen

Jetzt solltest du in der Lage sein deine Infra richtig zu deployen. Nimm die hier

Now run these:


kubectl apply -f mongodb-deployment.yml
kubectl apply -f mongodb-service.yml
kubectl apply -f redis-deployment.yml
kubectl apply -f redis-service.yml
kubectl apply -f backend-deployment.yml
kubectl apply -f backend-service.yml
kubectl apply -f frontend-deployment.yml
kubectl apply -f frontend-service.yml